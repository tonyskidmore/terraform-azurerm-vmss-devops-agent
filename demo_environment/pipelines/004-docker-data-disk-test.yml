---

name: "container-test"

trigger: none

variables:
  - group: build
  - name: containerImage
    value: "ghcr.io/tonyskidmore/azdo-container-image:latest"
  - name: serviceConnection
    value: "demo-vmss"

pool:
  name: 'vmss-agent-pool-linux-004'

resources:
  containers:
    - container: ubuntu
      image: '${{ variables.containerImage }}'

jobs:
  - job: test
    displayName: "Test Container Job"
    continueOnError: false
    container: ubuntu

    steps:

      - checkout: self

      - script: |
          env
        displayName: Show environment variables

      - script: |
          source /etc/os-release
          printf "Running on: %s\n" "$PRETTY_NAME"
        displayName: Check operating system version

      - script: |
          url="https://releases.hashicorp.com/terraform/"
          url+="$TERRAFORM_VERSION"
          url+="/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          wget --quiet "$url"
          unzip "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          rm "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          sudo mv terraform /usr/bin
        displayName: Install Terraform
        env:
          TERRAFORM_VERSION: "1.4.0"

      - script: |
          tf_ver=$(terraform version -json | jq .terraform_version)
          printf "Terraform version installed: %s\n" "$tf_ver"
        displayName: Terraform version

      - task: AzureCLI@2
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: 'bash'
          scriptLocation: inlineScript
          addSpnToEnvironment: true
          inlineScript: |
            set -e
            terraform init
            terraform plan
        workingDirectory: $(System.DefaultWorkingDirectory)/examples/004-docker_data_disk/terraform
        displayName: Terraform init & plan
