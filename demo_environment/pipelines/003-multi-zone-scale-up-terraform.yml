---

name: "linux-multi-zone-scale-up"

parameters:
- name: operation
  displayName: Operation Mode
  type: string
  default: terraform-plan-apply
  values:
  - terraform-plan-apply
  - terraform-destroy

trigger: none

schedules:
  # https://crontab.guru
  # Note: UTC time
  - cron: "0 8 * * 1-5"
    always: true
    displayName: Scale up
    branches:
      include:
        - main

variables:
- group: build
- name: serviceConnection
  value: "demo-vmss"

pool:
  name: 'vmss-bootstrap-pool'

stages:

- template: ../terraform/terraform.yml
  parameters:
    ${{ if eq(parameters.operation, 'terraform-destroy') }}:
      destroyMode: true
    environmentParameters:
      demo:
        azureSubscription: "demo-vmss"
        beStorageAccountName: $(state_storage_account_name)
        beContainerName: $(state_container_name)
        beKey: "003-multi-zone.tfstate"
        beResourceGroupName: $(state_resource_group_name)
        beSubscriptionId: $(azurerm_subscription_id)
        dependsOn: []
        environmentName: "demo"
        planCommandOptions: '-var-file=$(System.DefaultWorkingDirectory)/module/examples/003-multi_zone/scale/scale-up.tfvars'
    initCheckout:
      - self
      - git://$(project)/module
    poolName: 'vmss-bootstrap-pool'
    terraformDirectory: '$(System.DefaultWorkingDirectory)/module/examples/003-multi_zone'
    terraformTfVars:
      AZ_SUBSCRIPTION: $(azurerm_subscription_id)
      AZDO_PERSONAL_ACCESS_TOKEN: $(ado_ext_pat)
      AZDO_ORG_SERVICE_URL: $(ado_org)
      TF_VAR_ado_ext_pat: $(ado_ext_pat)
      TF_VAR_ado_org: $(ado_org)
      TF_VAR_azurerm_subscription_id: $(azurerm_subscription_id)
      TF_VAR_azurerm_spn_tenantid: $(azurerm_spn_tenantid)
      TF_VAR_serviceprincipalid: $(serviceprincipalid)
      TF_VAR_serviceprincipalkey: $(serviceprincipalkey)
